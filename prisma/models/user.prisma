enum UserRole {
  USER
  ADMIN
  SELLER
  LEAD
  GUEST
  CREATOR
}

model User {
  id String @id @default(cuid())

  name               String?
  email              String  @unique
  emailVerified      Boolean @default(false)
  image              String?
  isTwoFactorEnabled Boolean @default(false)
  billing_address    Json    @default("{}")
  payment_method     Json    @default("{}")
  company            String?
  address            String?
  location           Json?   @default("{}")
  postcode           String?
  city               String?
  phone              String?

  activity      String?
  bounced       Int      @default(0)
  affiliateRate Float?   @default(0.05)
  isAnonymous   Boolean? @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role                  UserRole               @default(USER)
  accounts              Account[]
  sessions              Session[]
  sites                 Site[]
  subscriptions         Subscription[]
  authenticator         Authenticator[]
  links                 Link[]
  customer              Customer?
  twoFactorConfirmation TwoFactorConfirmation?

  referer   User?    @relation("Affiliation", fields: [refererId], references: [id])
  refererId String?
  naf       NafCode? @relation(fields: [codeNaf], references: [id])
  codeNaf   String?

  feedback       Feedback[]
  likes          Like[]
  affiliates     User[]          @relation("Affiliation")
  events         Event[]         @relation("UserEvents")
  workflowStates WorkflowState[]
  executions     Execution[]     @relation("UserActionLogs")
  jobs           Queue[]         @relation("UserQueueJobs")
  outbox         Outbox[]
  feed           Feed[]
  comments       Comment[]
  sent           Message[]       @relation("Sent")
  received       Message[]       @relation("Received")
  reservations   Reservation[]
  lists          List[]          @relation("Contacts")
  listsManage    List[]          @relation("ContactsOwners")
  emails         Email[]
  clicks         Click[]         @relation("ClickUser")
  referrals      Click[]         @relation("ClickReferer")

  @@index([email])
  @@index([role])
  @@index([bounced])
  @@index([emailVerified])
  @@index([createdAt, id])
  @@index([refererId, createdAt])
  @@index([city])
  @@index([postcode])
  @@index([codeNaf])
  @@index([company])
  @@index([phone])
  @@index([activity])
  @@index([activity, codeNaf])
  @@index([city, postcode])
  @@index([bounced, createdAt])
}

model Message {
  id String @id @default(cuid())

  content   String
  createdAt DateTime @default(now())

  sender       User   @relation("Sent", fields: [senderEmail], references: [id])
  senderEmail  String
  receiver     User   @relation("Received", fields: [receiveEmail], references: [id])
  receiveEmail String
}

model Feedback {
  id String @id @default(cuid())

  message String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String?

  @@index([userId])
}
